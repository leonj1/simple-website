name: Semantic Version and Tag

on:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: read

jobs:
  version-and-tag:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for proper version calculation

      - name: Get next version
        id: version
        uses: mathieudutour/github-tag-action@v6.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          dry_run: true  # Don't create tag yet, just calculate version
          default_bump: patch
          tag_prefix: v
          # Analyze commit messages for version bumping
          # feat: minor bump
          # fix: patch bump  
          # BREAKING CHANGE: major bump
          release_branches: main
          pre_release_branches: '^((dev|develop|staging|beta|preview)/.*)$'
          custom_release_rules: |
            chore:patch,
            docs:patch,
            style:patch,
            refactor:patch,
            perf:patch,
            test:patch,
            build:patch,
            ci:patch

      - name: Create and push tag
        if: steps.version.outputs.new_tag
        uses: mathieudutour/github-tag-action@v6.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          custom_tag: ${{ steps.version.outputs.new_tag }}
          tag_prefix: v

      - name: Generate changelog
        id: changelog
        uses: requarks/changelog-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ steps.version.outputs.new_tag }}
          excludeTypes: build,docs,style,other

      - name: Create Release
        if: steps.version.outputs.new_tag
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.version.outputs.new_tag }}
          name: Release ${{ steps.version.outputs.new_tag }}
          body: |
            ## What's Changed
            ${{ steps.changelog.outputs.changes }}
            
            **Full Changelog**: ${{ steps.version.outputs.previous_tag }}...${{ steps.version.outputs.new_tag }}
          makeLatest: true
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Update package.json version (if exists)
        if: steps.version.outputs.new_tag
        run: |
          if [ -f "package.json" ]; then
            VERSION="${{ steps.version.outputs.new_version }}"
            jq --arg version "$VERSION" '.version = $version' package.json > package.json.tmp
            mv package.json.tmp package.json
            
            git config user.name "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"
            
            git add package.json
            git commit -m "chore: bump version to ${{ steps.version.outputs.new_tag }} [skip ci]"
            git push origin main
          fi